##first create a file 
311  vim mariadb.sh
###inside the file we need to provide our task
#!/bin/bash
echo "installing and configuring mariadb server ..."
sudo apt install mariadb-server -y
sudo systemctl enable mariadb
sudo systemctl start mariadb

root_password=mypass

#make sure that nobody can access the server withoguht the password
sudo mysql -e ""ALTER USER 'root'@'localhost' IDENTIFIED BY 'testpass';

#kill off the demo database
sudo mysql -e "drop database if exists test"

#create a database and verify it
echo "Creating staging database"
sudo mysql -e "create database if not exists staging"

echo "create a production database"
sudo mysql -e "create database if not exists production"

sudo mysql -e "use staging;CREATE TABLE IF NOT EXISTS tasks ( \
    task_id INT AUTO_INCREMENT PRIMARY KEY, \
    title VARCHAR(255) NOT NULL, \
    start_date DATE, \
    due_date DATE, \
    status TINYINT NOT NULL, \
    priority TINYINT NOT NULL, \
    description TEXT \
    ) ENGINE=INNODB;" \

echo "Table tasks created."


echo "Inserting data into tasks table..."


query1="use staging; INSERT INTO tasks (title, start_date, due_date, status, priority, description) \
        VALUES('task1', '2020-07-01', '2020-07-31', 1, 1, 'this is the first task')"


query2="use staging; INSERT INTO tasks (title, start_date, due_date, status, priority, description) \
        VALUES('task2', '2020-08-01', '2020-08-31', 2, 2, 'this is the second task')"


query3="use staging; INSERT INTO tasks (title, start_date, due_date, status, priority, description) \
        VALUES('task3', '2020-09-01', '2020-09-30', 1, 1, 'this is the third task')"


query4="use staging; INSERT INTO tasks (title, start_date, due_date, status, priority, description) \
        VALUES('task4', '2020-10-01', '2020-10-31', 1, 1, 'this is fourth task')"
sudo mysql -e "$query1"
sudo mysql -e "$query2"
####then make the file executable

  312  chmod +x mariadb.sh
###run it using 
./mariadb.sh
###loging to the database 
mysql -u root -p
####
show database;
use staging;
select * from task;
exit
